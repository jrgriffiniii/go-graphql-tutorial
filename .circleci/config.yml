---
version: 2

jobs:
  ci:
    docker:
      - image: cimg/go:1.18

      - image: cimg/postgres:14.2
        environment:
          POSTGRES_USER: go-graphql-tutorial
          POSTGRES_DB: secret

    parallelism: 2

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout

      - run:
          name: Create the directory for the test results
          command: mkdir -p $TEST_RESULTS

      - restore_cache:
          keys:
            - go-mod-{{ checksum "go.sum" }}

      - run:
          name: Waiting for PostgreSQL to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Install the module dependencies
          command: go get .

      - save_cache:
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - run:
          name: Install golangci-lint
          command: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.45.2

      - run:
          name: Lint the source code files
          command: $(go env GOPATH)/bin/golangci-lint

      - run:
          name: Install gotestsum
          command: |
            go install gotest.tools/gotestsum@latest
            $(go env GOPATH)/bin/gotestsum

      - run:
          name: Execute the test suites
          environment:
            DB_URL: "postgres://go-graphql-tutorial@localhost:5432/test?sslmode=disable"
            DB_MIGRATIONS: /home/circleci/project/db/migrations

          command: |
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            $(go env GOPATH)/bin/gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results

workflows:
  version: 2
  build-workflow:
    jobs:
      - ci
